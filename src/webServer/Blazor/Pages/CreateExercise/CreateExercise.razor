@page "/exercise/create"
@inject ExerciseService exerciseService
@inject NavigationManager navMag

<AuthorizeView Roles="Trainer,Admin">
    <Authorized>
        <div>
            <h3>Create exercise</h3>
            <div class="form-group field">
                <label>Name:</label>
                <input type="text" @bind="name" @bind:event="oninput" />

                <label>Description:</label>
                <input type="text" @bind="description" @bind:event="oninput">
                <label>Duration:</label>
                <input type="number" @bind="duration" @bind:event="oninput">
                @if (!string.IsNullOrEmpty(resultmsg))
                {
                    <label style="color: @colour">@resultmsg</label>
                }
            </div>
            <div class="button-row">
                <button @onclick="CreateExerciseAsync" class="acceptbtn">Create exercise</button>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        You are not authorized to see this!
    </NotAuthorized>
</AuthorizeView>



@code {
    private string name = "";
    private string description = "";
    private int duration = 0;
    private string resultmsg = "";
    private string colour = "";

    private async Task CreateExerciseAsync()
    {
        resultmsg = "";

        try
        {
            var exercise = new ExerciseDTO
            {
                Name = name,
                Description = description,
                Duration = duration
            };
            await exerciseService.CreateExercise(exercise);
            name = "";
            description = "";
            duration = 0;

            navMag.NavigateTo("/exercises");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultmsg = e.Message;
            colour = "red";
        }
    }
}