@page "/edit-workout/{id:int}"
@inject WorkoutService WorkoutService
@inject ExerciseService ExerciseService
@inject NavigationManager navMag

<AuthorizeView Roles="Member,Trainer,Admin">
    <Authorized>
        <h1>Edit Workout</h1>
        <div>
            <label>Workout Name:</label>
            <input @bind="workout.Name" />
        </div>
        <div>
            <label>Workout Description:</label>
            <input @bind="workout.Description" />
        </div>
        <div>
            <label>Workout Duration:</label>
            <input @bind="workout.DurationInMin" />
        </div>
    </Authorized>
    <NotAuthorized>
        <Login url="/" />
    </NotAuthorized>
</AuthorizeView>

<AuthorizeView Roles="Trainer,Admin">
    <Authorized>
        <div>
            <label>Is Public:</label>
            <input type="checkbox" @bind="workout.IsPublic" />
        </div>
    </Authorized>
</AuthorizeView>
<AuthorizeView Roles="Member,Trainer,Admin">
    <Authorized>
        <h2>Exercises:</h2>
        <table>
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Duration</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (workout.Exercises != null)
                {
                    foreach (var exercise in workout.Exercises)
                    {
                        <tr>
                            <td>@exercise.Name</td>
                            <td>@exercise.Description</td>
                            <td>@exercise.Duration</td>
                            <td><button @onclick="@(() => RemoveExercise(exercise))">Remove</button></td>
                        </tr>
                    }
                }

            </tbody>
        </table>
        <button @onclick="() => showAddExerciseModal = true">Add Exercise</button>

        @if (showAddExerciseModal)
        {
            <AddExercise selectedExChanged="@AddSelectedExercise" />
            <button @onclick="() => showAddExerciseModal = false">Cancel</button>
        }

        <button @onclick="@SaveChanges">Save Changes</button>
        <button @onclick="@Cancel">Cancel Changes</button>

    </Authorized>
</AuthorizeView>

@functions {
    [Parameter]
    public int id { get; set; }
    WorkoutDTO workout = new WorkoutDTO();
    bool showAddExerciseModal;
    int selectedExercise;
    protected override async Task OnInitializedAsync()
    {
        workout = await WorkoutService.GetWorkout(id);
    }

    void RemoveExercise(ExerciseDTO exercise)
    {
        workout.Exercises.Remove(exercise);
    }

    async Task AddSelectedExercise(int id)
    {
        var exercise = new ExerciseDTO();
        List<ExerciseDTO> dtos = await ExerciseService.GetExercises();
        foreach (var item in dtos)
        {
            if (item.Id == id)
                exercise = item;
        }
        workout.Exercises.Add(exercise);
        showAddExerciseModal = false;
    }

    async void SaveChanges()
    {
        await WorkoutService.EditWorkout(workout);
        navMag.NavigateTo("/workouts");
    }

    void Cancel()
    {
        navMag.NavigateTo("/workouts");
    }
}